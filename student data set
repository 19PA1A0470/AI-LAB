{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled5.ipynb",
      "provenance": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyPtVQuKCp+/Gw6/j4ECjiHZ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/19PA1A0470/python-basics/blob/master/student%20data%20set\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "K7-UsA2VKNj7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import pandas as pd # for handling data in the form of tables\n",
        "import numpy as np # For handling matrix\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "from sklearn.model_selection import train_test_split # For spliting the data into train and test\n",
        "from sklearn.linear_model import LinearRegression # for using the model\n",
        "from sklearn import metrics\n",
        "# import matplotlib.pyplot as plt # for plotting"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ifebVHgyLA6k",
        "colab_type": "code",
        "outputId": "f6102dc0-d987-4085-a68a-69778cb47efa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 445
        }
      },
      "source": [
        "bmi=pd.read_csv(\"students_placement_data.csv\")\n",
        "bmi"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Roll No</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Section</th>\n",
              "      <th>SSC Percentage</th>\n",
              "      <th>inter_Diploma_percentage</th>\n",
              "      <th>B.Tech_percentage</th>\n",
              "      <th>Backlogs</th>\n",
              "      <th>registered_for_ Placement_Training</th>\n",
              "      <th>placement status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>A</td>\n",
              "      <td>87.3</td>\n",
              "      <td>65.30</td>\n",
              "      <td>40.00</td>\n",
              "      <td>18</td>\n",
              "      <td>NO</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>F</td>\n",
              "      <td>A</td>\n",
              "      <td>89.0</td>\n",
              "      <td>92.40</td>\n",
              "      <td>71.45</td>\n",
              "      <td>0</td>\n",
              "      <td>yes</td>\n",
              "      <td>Placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>F</td>\n",
              "      <td>A</td>\n",
              "      <td>67.0</td>\n",
              "      <td>68.00</td>\n",
              "      <td>45.26</td>\n",
              "      <td>13</td>\n",
              "      <td>yes</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>M</td>\n",
              "      <td>A</td>\n",
              "      <td>71.0</td>\n",
              "      <td>70.40</td>\n",
              "      <td>36.47</td>\n",
              "      <td>17</td>\n",
              "      <td>yes</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>M</td>\n",
              "      <td>A</td>\n",
              "      <td>67.0</td>\n",
              "      <td>65.50</td>\n",
              "      <td>42.52</td>\n",
              "      <td>17</td>\n",
              "      <td>yes</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>113</td>\n",
              "      <td>M</td>\n",
              "      <td>B</td>\n",
              "      <td>81.1</td>\n",
              "      <td>78.60</td>\n",
              "      <td>35.84</td>\n",
              "      <td>16</td>\n",
              "      <td>NO</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>114</td>\n",
              "      <td>M</td>\n",
              "      <td>B</td>\n",
              "      <td>81.3</td>\n",
              "      <td>85.12</td>\n",
              "      <td>68.50</td>\n",
              "      <td>0</td>\n",
              "      <td>NO</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>115</td>\n",
              "      <td>M</td>\n",
              "      <td>B</td>\n",
              "      <td>83.5</td>\n",
              "      <td>89.90</td>\n",
              "      <td>76.30</td>\n",
              "      <td>0</td>\n",
              "      <td>NO</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>116</td>\n",
              "      <td>M</td>\n",
              "      <td>B</td>\n",
              "      <td>85.5</td>\n",
              "      <td>90.63</td>\n",
              "      <td>74.50</td>\n",
              "      <td>0</td>\n",
              "      <td>NO</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>117</td>\n",
              "      <td>M</td>\n",
              "      <td>B</td>\n",
              "      <td>80.0</td>\n",
              "      <td>83.33</td>\n",
              "      <td>65.53</td>\n",
              "      <td>0</td>\n",
              "      <td>NO</td>\n",
              "      <td>Not placed</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>117 rows Ã— 9 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     Roll No Gender  ... registered_for_ Placement_Training  placement status\n",
              "0          1      M  ...                                 NO        Not placed\n",
              "1          2      F  ...                                yes            Placed\n",
              "2          3      F  ...                                yes        Not placed\n",
              "3          4      M  ...                                yes        Not placed\n",
              "4          5      M  ...                                yes        Not placed\n",
              "..       ...    ...  ...                                ...               ...\n",
              "112      113      M  ...                                 NO        Not placed\n",
              "113      114      M  ...                                 NO        Not placed\n",
              "114      115      M  ...                                 NO        Not placed\n",
              "115      116      M  ...                                 NO        Not placed\n",
              "116      117      M  ...                                 NO        Not placed\n",
              "\n",
              "[117 rows x 9 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H-3y86_KLp3-",
        "colab_type": "code",
        "outputId": "3367f94c-8230-442d-f3e7-f66dab37e583",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 288
        }
      },
      "source": [
        "bmi.describe()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Roll No</th>\n",
              "      <th>SSC Percentage</th>\n",
              "      <th>inter_Diploma_percentage</th>\n",
              "      <th>B.Tech_percentage</th>\n",
              "      <th>Backlogs</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>117.000000</td>\n",
              "      <td>117.000000</td>\n",
              "      <td>117.000000</td>\n",
              "      <td>117.000000</td>\n",
              "      <td>117.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>59.000000</td>\n",
              "      <td>80.324359</td>\n",
              "      <td>80.772906</td>\n",
              "      <td>62.943419</td>\n",
              "      <td>4.111111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>33.919021</td>\n",
              "      <td>8.879266</td>\n",
              "      <td>11.267248</td>\n",
              "      <td>12.064306</td>\n",
              "      <td>6.335148</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>47.800000</td>\n",
              "      <td>52.200000</td>\n",
              "      <td>31.200000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>30.000000</td>\n",
              "      <td>76.000000</td>\n",
              "      <td>73.400000</td>\n",
              "      <td>54.180000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>59.000000</td>\n",
              "      <td>82.330000</td>\n",
              "      <td>83.600000</td>\n",
              "      <td>64.360000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>88.000000</td>\n",
              "      <td>87.000000</td>\n",
              "      <td>90.000000</td>\n",
              "      <td>72.570000</td>\n",
              "      <td>7.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>117.000000</td>\n",
              "      <td>93.660000</td>\n",
              "      <td>96.900000</td>\n",
              "      <td>88.100000</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          Roll No  SSC Percentage  ...  B.Tech_percentage    Backlogs\n",
              "count  117.000000      117.000000  ...         117.000000  117.000000\n",
              "mean    59.000000       80.324359  ...          62.943419    4.111111\n",
              "std     33.919021        8.879266  ...          12.064306    6.335148\n",
              "min      1.000000       47.800000  ...          31.200000    0.000000\n",
              "25%     30.000000       76.000000  ...          54.180000    0.000000\n",
              "50%     59.000000       82.330000  ...          64.360000    0.000000\n",
              "75%     88.000000       87.000000  ...          72.570000    7.000000\n",
              "max    117.000000       93.660000  ...          88.100000   25.000000\n",
              "\n",
              "[8 rows x 5 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v4dlVzChMSgb",
        "colab_type": "code",
        "outputId": "5e6a7c28-f289-4c92-aba0-b398363bc428",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        }
      },
      "source": [
        "\n",
        "bmi.plot(x='SSC Percentage',y='inter_Diploma_percentage',style='8')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd2dd7f0be0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n34qDdtzhrc3MndYe2jZ69uzZ9XNzczN79+495DnuzgUXXMCCBQuyruPII48sebtPP/00559//iHL\nu9cil1Kb3Nra2vX8pqamrtfW1NTU9bruuusujjvuOJ555hn279/PYYcdlned2dpT6f5wd7785S9z\n3XXXHbS8s7PzkPdj9+7dh/z9u+++yw033MCKFSs4/vjjuf322wtOzeDufPe732XSpEl5nyfJl+7t\nhqkW2YDuvfxsEtUDr9bRtBi9evXirbfeAuDMM8/kqaee4vnnnwdSqYrnnnuurPWmc+zbt2/v6i1n\neumll/jjH/8IwPz58zn77LMPenz06NH87ne/Y8eOHezbt48FCxZw7rnnFr39N998k379+tHU1MT9\n999f8ELj8uXLeeGFF9i/fz8PPPAAZ599dtH7o1evXvTv378rxfPee+/xzjvvMGnSJH70ox915c23\nbt3Kq6++mrcdme9HOlj36dOHt99+mwcffBCA3r1706tXL5YtWwbAT3/6066/nzRpEt///vfZs2cP\nAM899xy7du3Kv7NEAvnO+sOqjsvWy+8uUQEcwssdlWrmzJlcdNFFTJgwgb59+3Lfffdx1VVXcfrp\npzN27Nis+et8brnllq4ywo6ODpYsWUKPHj0Oed7gwYP5j//4D4YMGcLrr7/O5z73uYMe79evH7Nn\nz2bChAkMHz6ckSNHctlllxXdjhtuuIF58+YxfPhwNmzYULC3PGrUKD7/+c8zZMgQBg0axOWXX17S\n/rj//vv5zne+w+mnn864ceN4+eWXufDCC5kyZQpjx45l2LBhTJ48uSs45zJt2jSuv/562tra6Nmz\nJzNmzGDo0KFMmjSJUaMO5Dfnzp3LjBkzaGtrY9euXRx99NEAXHvttZx66qmMGDGCoUOHct1112U9\n2xLJJltuPS2s6rhievOWK/daDe3t7d69dnn9+vUMGTKkZm1Iks7OTj7xiU+wZs2aqJsCpKpQ7rzz\nzq4LhEnw9ttvd1UZzZ49m+3bt/Ptb3+76L/X5zPewppTpNJt5zJ/xpiy2zP4tl91rXv7vC/y3vZN\nh+RPE9cDFynFwoULaWtrY+jQoTz55JPcdtttUTdJQhL1KMticuuVtCdfLz9NPfAquvHGG3nqqacO\nWvaFL3yB6dOnR9Si4jz77LN85jOfOWhZz549u3LJjaSeP59J0723vd+dPfsOjV89W5qKvmhZSQ++\n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\ngg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "h3eolC7aNZg-",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x=bmi['SSC Percentage'].values.reshape(-1,1)\n",
        "y=bmi['inter_Diploma_percentage'].values.reshape(-1,1)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1Zti7nNVQdno",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X_train,X_test,Y_train,Y_test=train_test_split(x,y,test_size=0.2)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kUFUNiNyRErg",
        "colab_type": "code",
        "outputId": "48580af3-652b-4698-b4f6-1e741cfaa03c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "source": [
        "model=LinearRegression()\n",
        "model.fit(X_train,Y_train)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SXk81BaHRPj_",
        "colab_type": "code",
        "outputId": "bd837470-096d-45ae-e0b2-e70a66c00a44",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "source": [
        "print(model.intercept_) "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[14.20127757]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tdkyG7NmRn6d",
        "colab_type": "code",
        "outputId": "7cb8580f-dcdd-493b-c0df-307c8d2cd7ff",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "source": [
        "print(model.coef_) "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[0.83258299]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oMqJowPCRuV9",
        "colab_type": "code",
        "outputId": "e76ab7b9-6fbd-4427-b274-cebfc1d1dc11",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 454
        }
      },
      "source": [
        "predicted_inter_Diploma_percentage=model.predict(X_test) \n",
        "predicted_inter_Diploma_percentage"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[83.30566578],\n",
              "       [83.30566578],\n",
              "       [87.46858073],\n",
              "       [79.97533382],\n",
              "       [88.57591611],\n",
              "       [83.16412667],\n",
              "       [74.28879199],\n",
              "       [86.71925604],\n",
              "       [89.9663297 ],\n",
              "       [88.30116372],\n",
              "       [89.55003821],\n",
              "       [81.85697138],\n",
              "       [83.43887906],\n",
              "       [70.9501342 ],\n",
              "       [80.25008621],\n",
              "       [82.47308279],\n",
              "       [89.4084991 ],\n",
              "       [85.80341475],\n",
              "       [82.72285769],\n",
              "       [68.56894685],\n",
              "       [77.06129335],\n",
              "       [89.13374671],\n",
              "       [88.30116372],\n",
              "       [60.54284682]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6cC1kRZzSNf6",
        "colab_type": "code",
        "outputId": "959b5434-628e-4669-8512-b99170d5b4ad",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 768
        }
      },
      "source": [
        "Actual_predicted=pd.DataFrame({'predicted':predicted_inter_Diploma_percentage.flatten(), 'Actual':Y_test.flatten()})\n",
        "Actual_predicted"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>predicted</th>\n",
              "      <th>Actual</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>83.305666</td>\n",
              "      <td>83.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>83.305666</td>\n",
              "      <td>81.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>87.468581</td>\n",
              "      <td>67.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>79.975334</td>\n",
              "      <td>88.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>88.575916</td>\n",
              "      <td>88.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>83.164127</td>\n",
              "      <td>84.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>74.288792</td>\n",
              "      <td>77.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>86.719256</td>\n",
              "      <td>81.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>89.966330</td>\n",
              "      <td>94.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>88.301164</td>\n",
              "      <td>86.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>89.550038</td>\n",
              "      <td>90.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>81.856971</td>\n",
              "      <td>68.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>83.438879</td>\n",
              "      <td>79.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>70.950134</td>\n",
              "      <td>62.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>80.250086</td>\n",
              "      <td>61.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>82.473083</td>\n",
              "      <td>73.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>89.408499</td>\n",
              "      <td>95.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>85.803415</td>\n",
              "      <td>91.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>82.722858</td>\n",
              "      <td>75.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>68.568947</td>\n",
              "      <td>77.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>77.061293</td>\n",
              "      <td>81.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>89.133747</td>\n",
              "      <td>91.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>88.301164</td>\n",
              "      <td>92.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>60.542847</td>\n",
              "      <td>65.30</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    predicted  Actual\n",
              "0   83.305666   83.00\n",
              "1   83.305666   81.01\n",
              "2   87.468581   67.90\n",
              "3   79.975334   88.90\n",
              "4   88.575916   88.60\n",
              "5   83.164127   84.10\n",
              "6   74.288792   77.70\n",
              "7   86.719256   81.00\n",
              "8   89.966330   94.30\n",
              "9   88.301164   86.00\n",
              "10  89.550038   90.40\n",
              "11  81.856971   68.00\n",
              "12  83.438879   79.90\n",
              "13  70.950134   62.60\n",
              "14  80.250086   61.10\n",
              "15  82.473083   73.60\n",
              "16  89.408499   95.60\n",
              "17  85.803415   91.90\n",
              "18  82.722858   75.13\n",
              "19  68.568947   77.70\n",
              "20  77.061293   81.70\n",
              "21  89.133747   91.60\n",
              "22  88.301164   92.40\n",
              "23  60.542847   65.30"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4mMD45b3SnOT",
        "colab_type": "code",
        "outputId": "5b17e854-7661-4575-f471-ad2867bb77e3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        }
      },
      "source": [
        "\n",
        "plt.scatter(X_test,Y_test,color='red')\n",
        "plt.plot(X_test,predicted_inter_Diploma_percentage)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fd2dd317c18>]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fIEsl36kS-lL",
        "colab_type": "code",
        "outputId": "216a5bf5-ec80-4fbc-b4b0-f7dd84cc4326",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "source": [
        "print('R2 error:',metrics.r2_score(Y_test, predicted_inter_Diploma_percentage))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "R2 error: 0.3662169100997603\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Tmdg92kTT3j1",
        "colab_type": "code",
        "outputId": "6a01e969-6fdf-4c09-c20c-4f5e3ee74fda",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "source": [
        "print('R2 error:',metrics.mean_absolute_error(Y_test, predicted_inter_Diploma_percentage))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "R2 error: 6.142162314939154\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a_NGXgVWU23G",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}